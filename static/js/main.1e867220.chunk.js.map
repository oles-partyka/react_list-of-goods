{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverseGoods","setState","sortBy","type","reset","visibleGoods","goods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","this","className","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,uGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,aAAe,WACb,EAAKC,UAAS,SAAAL,GAAK,kCAEZA,GAFY,IAGfC,YAAaD,EAAMC,iBAV3B,EAeEK,OAAS,SAACC,GACR,EAAKF,UAAS,SAAAL,GAAK,kCAEZA,GAFY,IAGfE,SAAUK,QAnBlB,EAwBEC,MAAQ,WACN,EAAKH,UAAS,SAAAL,GAAK,kCAEZA,GAFY,IAGfC,YAAY,EACZC,SAAUL,EAASM,WA7B3B,4CAkCE,WAAU,IAAD,OACDM,EAlEH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENQ,EAAY,YAAOC,GAEzB,QAAQ,GACN,KAAKR,IAAaL,EAASc,SACzBF,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKZ,IAAaL,EAASmB,OACzBP,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAW7C,OAJIhB,GACFQ,EAAaS,UAGRT,EA2CgBU,CAAkBrB,EAAiBsB,KAAKpB,OAE7D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEd,KAAK,SACLc,UAAWC,IAAW,iBACpB,CAAE,aAAsC,aAAxBF,KAAKpB,MAAME,YAC7BqB,QAAS,WACP,EAAKjB,OAAOT,EAASc,WALzB,iCAWA,wBACEJ,KAAK,SACLc,UAAWC,IAAW,oBACpB,CAAE,aAAsC,WAAxBF,KAAKpB,MAAME,YAC7BqB,QAAS,WACP,EAAKjB,OAAOT,EAASmB,SALzB,4BAWA,wBACET,KAAK,SACLc,UAAWC,IAAW,oBACpB,CAAE,YAAaF,KAAKpB,MAAMC,aAC5BsB,QAASH,KAAKhB,aAJhB,sBAS2B,SAAxBgB,KAAKpB,MAAME,UAAuBkB,KAAKpB,MAAMC,aAC5C,wBACEM,KAAK,SACLc,UAAU,4BACVE,QAASH,KAAKZ,MAHhB,sBAWN,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eArFrB,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1e867220.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (true) {\n    case sortType === SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case sortType === SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseGoods = () => {\n    this.setState(state => (\n      {\n        ...state,\n        isReversed: !state.isReversed,\n      }\n    ));\n  };\n\n  sortBy = (type: SortType) => {\n    this.setState(state => (\n      {\n        ...state,\n        sortType: type,\n      }\n    ));\n  };\n\n  reset = () => {\n    this.setState(state => (\n      {\n        ...state,\n        isReversed: false,\n        sortType: SortType.NONE,\n      }\n    ));\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              { 'is-light': !(this.state.sortType === 'alphabet') })}\n            onClick={() => {\n              this.sortBy(SortType.ALPHABET);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success',\n              { 'is-light': !(this.state.sortType === 'length') })}\n            onClick={() => {\n              this.sortBy(SortType.LENGTH);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              { 'is-light': !this.state.isReversed })}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n          {\n            (this.state.sortType !== 'none' || this.state.isReversed) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}